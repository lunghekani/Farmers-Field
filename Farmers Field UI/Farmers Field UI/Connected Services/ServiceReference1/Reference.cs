//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Farmers_Field_UI.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ServiceApplication")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string first_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phone_numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string provinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zip_codeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string active {
            get {
                return this.activeField;
            }
            set {
                if ((object.ReferenceEquals(this.activeField, value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.first_nameField, value) != true)) {
                    this.first_nameField = value;
                    this.RaisePropertyChanged("first_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last_name {
            get {
                return this.last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.last_nameField, value) != true)) {
                    this.last_nameField = value;
                    this.RaisePropertyChanged("last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone_number {
            get {
                return this.phone_numberField;
            }
            set {
                if ((object.ReferenceEquals(this.phone_numberField, value) != true)) {
                    this.phone_numberField = value;
                    this.RaisePropertyChanged("phone_number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string province {
            get {
                return this.provinceField;
            }
            set {
                if ((object.ReferenceEquals(this.provinceField, value) != true)) {
                    this.provinceField = value;
                    this.RaisePropertyChanged("province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_type {
            get {
                return this.user_typeField;
            }
            set {
                if ((object.ReferenceEquals(this.user_typeField, value) != true)) {
                    this.user_typeField = value;
                    this.RaisePropertyChanged("user_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zip_code {
            get {
                return this.zip_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.zip_codeField, value) != true)) {
                    this.zip_codeField = value;
                    this.RaisePropertyChanged("zip_code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/ServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Product_DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Product_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_SupplierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Category {
            get {
                return this.Product_CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_CategoryField, value) != true)) {
                    this.Product_CategoryField = value;
                    this.RaisePropertyChanged("Product_Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Description {
            get {
                return this.Product_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_DescriptionField, value) != true)) {
                    this.Product_DescriptionField = value;
                    this.RaisePropertyChanged("Product_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Product_Discount {
            get {
                return this.Product_DiscountField;
            }
            set {
                if ((this.Product_DiscountField.Equals(value) != true)) {
                    this.Product_DiscountField = value;
                    this.RaisePropertyChanged("Product_Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_ID {
            get {
                return this.Product_IDField;
            }
            set {
                if ((this.Product_IDField.Equals(value) != true)) {
                    this.Product_IDField = value;
                    this.RaisePropertyChanged("Product_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Image {
            get {
                return this.Product_ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_ImageField, value) != true)) {
                    this.Product_ImageField = value;
                    this.RaisePropertyChanged("Product_Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Name {
            get {
                return this.Product_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_NameField, value) != true)) {
                    this.Product_NameField = value;
                    this.RaisePropertyChanged("Product_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Product_Price {
            get {
                return this.Product_PriceField;
            }
            set {
                if ((this.Product_PriceField.Equals(value) != true)) {
                    this.Product_PriceField = value;
                    this.RaisePropertyChanged("Product_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Supplier {
            get {
                return this.Product_SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_SupplierField, value) != true)) {
                    this.Product_SupplierField = value;
                    this.RaisePropertyChanged("Product_Supplier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cart", Namespace="http://schemas.datacontract.org/2004/07/ServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Cart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Cart_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cart_ID {
            get {
                return this.Cart_IDField;
            }
            set {
                if ((this.Cart_IDField.Equals(value) != true)) {
                    this.Cart_IDField = value;
                    this.RaisePropertyChanged("Cart_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_ID {
            get {
                return this.Product_IDField;
            }
            set {
                if ((this.Product_IDField.Equals(value) != true)) {
                    this.Product_IDField = value;
                    this.RaisePropertyChanged("Product_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wishlist", Namespace="http://schemas.datacontract.org/2004/07/ServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Wishlist : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Product_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Wishlist_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Product_ID {
            get {
                return this.Product_IDField;
            }
            set {
                if ((this.Product_IDField.Equals(value) != true)) {
                    this.Product_IDField = value;
                    this.RaisePropertyChanged("Product_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wishlist_ID {
            get {
                return this.Wishlist_IDField;
            }
            set {
                if ((this.Wishlist_IDField.Equals(value) != true)) {
                    this.Wishlist_IDField = value;
                    this.RaisePropertyChanged("Wishlist_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/ServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Cart_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Date_Of_IssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Invoice_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> Invoice_TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Quantity_BoughtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> User_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Cart_ID {
            get {
                return this.Cart_IDField;
            }
            set {
                if ((this.Cart_IDField.Equals(value) != true)) {
                    this.Cart_IDField = value;
                    this.RaisePropertyChanged("Cart_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date_Of_Issue {
            get {
                return this.Date_Of_IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.Date_Of_IssueField, value) != true)) {
                    this.Date_Of_IssueField = value;
                    this.RaisePropertyChanged("Date_Of_Issue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice_ID {
            get {
                return this.Invoice_IDField;
            }
            set {
                if ((this.Invoice_IDField.Equals(value) != true)) {
                    this.Invoice_IDField = value;
                    this.RaisePropertyChanged("Invoice_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Invoice_Total {
            get {
                return this.Invoice_TotalField;
            }
            set {
                if ((this.Invoice_TotalField.Equals(value) != true)) {
                    this.Invoice_TotalField = value;
                    this.RaisePropertyChanged("Invoice_Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity_Bought {
            get {
                return this.Quantity_BoughtField;
            }
            set {
                if ((this.Quantity_BoughtField.Equals(value) != true)) {
                    this.Quantity_BoughtField = value;
                    this.RaisePropertyChanged("Quantity_Bought");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        bool login(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        int register(Farmers_Field_UI.ServiceReference1.User FFieldUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/register", ReplyAction="http://tempuri.org/IService1/registerResponse")]
        System.Threading.Tasks.Task<int> registerAsync(Farmers_Field_UI.ServiceReference1.User FFieldUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registered", ReplyAction="http://tempuri.org/IService1/registeredResponse")]
        bool registered(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registered", ReplyAction="http://tempuri.org/IService1/registeredResponse")]
        System.Threading.Tasks.Task<bool> registeredAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isNewProduct", ReplyAction="http://tempuri.org/IService1/isNewProductResponse")]
        bool isNewProduct(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isNewProduct", ReplyAction="http://tempuri.org/IService1/isNewProductResponse")]
        System.Threading.Tasks.Task<bool> isNewProductAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewProduct", ReplyAction="http://tempuri.org/IService1/addNewProductResponse")]
        bool addNewProduct(string category, string name, string description, double price, double discount, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addNewProduct", ReplyAction="http://tempuri.org/IService1/addNewProductResponse")]
        System.Threading.Tasks.Task<bool> addNewProductAsync(string category, string name, string description, double price, double discount, string supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        bool AddProduct(Farmers_Field_UI.ServiceReference1.Product Prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task<bool> AddProductAsync(Farmers_Field_UI.ServiceReference1.Product Prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editProduct", ReplyAction="http://tempuri.org/IService1/editProductResponse")]
        bool editProduct(Farmers_Field_UI.ServiceReference1.Product Aug, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editProduct", ReplyAction="http://tempuri.org/IService1/editProductResponse")]
        System.Threading.Tasks.Task<bool> editProductAsync(Farmers_Field_UI.ServiceReference1.Product Aug, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeProduct", ReplyAction="http://tempuri.org/IService1/removeProductResponse")]
        bool removeProduct(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeProduct", ReplyAction="http://tempuri.org/IService1/removeProductResponse")]
        System.Threading.Tasks.Task<bool> removeProductAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllProducts", ReplyAction="http://tempuri.org/IService1/getAllProductsResponse")]
        Farmers_Field_UI.ServiceReference1.Product[] getAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllProducts", ReplyAction="http://tempuri.org/IService1/getAllProductsResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product[]> getAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllProdcutsByType", ReplyAction="http://tempuri.org/IService1/getAllProdcutsByTypeResponse")]
        Farmers_Field_UI.ServiceReference1.Product[] getAllProdcutsByType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllProdcutsByType", ReplyAction="http://tempuri.org/IService1/getAllProdcutsByTypeResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product[]> getAllProdcutsByTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductByID", ReplyAction="http://tempuri.org/IService1/getProductByIDResponse")]
        Farmers_Field_UI.ServiceReference1.Product getProductByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductByID", ReplyAction="http://tempuri.org/IService1/getProductByIDResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product> getProductByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserType", ReplyAction="http://tempuri.org/IService1/getUserTypeResponse")]
        string getUserType(string user_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserType", ReplyAction="http://tempuri.org/IService1/getUserTypeResponse")]
        System.Threading.Tasks.Task<string> getUserTypeAsync(string user_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindProductBeingSearched_ID", ReplyAction="http://tempuri.org/IService1/FindProductBeingSearched_IDResponse")]
        int FindProductBeingSearched_ID(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindProductBeingSearched_ID", ReplyAction="http://tempuri.org/IService1/FindProductBeingSearched_IDResponse")]
        System.Threading.Tasks.Task<int> FindProductBeingSearched_IDAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduct", ReplyAction="http://tempuri.org/IService1/getProductResponse")]
        Farmers_Field_UI.ServiceReference1.Product getProduct(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduct", ReplyAction="http://tempuri.org/IService1/getProductResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product> getProductAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        Farmers_Field_UI.ServiceReference1.User GetUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUser", ReplyAction="http://tempuri.org/IService1/GetUserResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.User> GetUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserByID", ReplyAction="http://tempuri.org/IService1/getUserByIDResponse")]
        Farmers_Field_UI.ServiceReference1.User getUserByID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserByID", ReplyAction="http://tempuri.org/IService1/getUserByIDResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.User> getUserByIDAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/userExists", ReplyAction="http://tempuri.org/IService1/userExistsResponse")]
        bool userExists(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/userExists", ReplyAction="http://tempuri.org/IService1/userExistsResponse")]
        System.Threading.Tasks.Task<bool> userExistsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCartItems", ReplyAction="http://tempuri.org/IService1/getCartItemsResponse")]
        Farmers_Field_UI.ServiceReference1.Cart[] getCartItems(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCartItems", ReplyAction="http://tempuri.org/IService1/getCartItemsResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Cart[]> getCartItemsAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToCart", ReplyAction="http://tempuri.org/IService1/addToCartResponse")]
        int addToCart(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToCart", ReplyAction="http://tempuri.org/IService1/addToCartResponse")]
        System.Threading.Tasks.Task<int> addToCartAsync(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/alreadyInCart", ReplyAction="http://tempuri.org/IService1/alreadyInCartResponse")]
        bool alreadyInCart(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/alreadyInCart", ReplyAction="http://tempuri.org/IService1/alreadyInCartResponse")]
        System.Threading.Tasks.Task<bool> alreadyInCartAsync(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeUserCart", ReplyAction="http://tempuri.org/IService1/removeUserCartResponse")]
        bool removeUserCart(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeUserCart", ReplyAction="http://tempuri.org/IService1/removeUserCartResponse")]
        System.Threading.Tasks.Task<bool> removeUserCartAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeFromCart", ReplyAction="http://tempuri.org/IService1/removeFromCartResponse")]
        int removeFromCart(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeFromCart", ReplyAction="http://tempuri.org/IService1/removeFromCartResponse")]
        System.Threading.Tasks.Task<int> removeFromCartAsync(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNumCartItems", ReplyAction="http://tempuri.org/IService1/GetNumCartItemsResponse")]
        int GetNumCartItems(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNumCartItems", ReplyAction="http://tempuri.org/IService1/GetNumCartItemsResponse")]
        System.Threading.Tasks.Task<int> GetNumCartItemsAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWishlist", ReplyAction="http://tempuri.org/IService1/getWishlistResponse")]
        Farmers_Field_UI.ServiceReference1.Wishlist[] getWishlist(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getWishlist", ReplyAction="http://tempuri.org/IService1/getWishlistResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Wishlist[]> getWishlistAsync(string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToWishList", ReplyAction="http://tempuri.org/IService1/addToWishListResponse")]
        int addToWishList(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToWishList", ReplyAction="http://tempuri.org/IService1/addToWishListResponse")]
        System.Threading.Tasks.Task<int> addToWishListAsync(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/alreadyInWishlist", ReplyAction="http://tempuri.org/IService1/alreadyInWishlistResponse")]
        bool alreadyInWishlist(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/alreadyInWishlist", ReplyAction="http://tempuri.org/IService1/alreadyInWishlistResponse")]
        System.Threading.Tasks.Task<bool> alreadyInWishlistAsync(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromWishList", ReplyAction="http://tempuri.org/IService1/RemoveFromWishListResponse")]
        int RemoveFromWishList(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromWishList", ReplyAction="http://tempuri.org/IService1/RemoveFromWishListResponse")]
        System.Threading.Tasks.Task<int> RemoveFromWishListAsync(int product_ID, string user_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenInvoice", ReplyAction="http://tempuri.org/IService1/GenInvoiceResponse")]
        int GenInvoice(int cartID, string dateTime, double total);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenInvoice", ReplyAction="http://tempuri.org/IService1/GenInvoiceResponse")]
        System.Threading.Tasks.Task<int> GenInvoiceAsync(int cartID, string dateTime, double total);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCart", ReplyAction="http://tempuri.org/IService1/GetCartResponse")]
        int GetCart(int cart_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCart", ReplyAction="http://tempuri.org/IService1/GetCartResponse")]
        System.Threading.Tasks.Task<int> GetCartAsync(int cart_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInvoice", ReplyAction="http://tempuri.org/IService1/getInvoiceResponse")]
        Farmers_Field_UI.ServiceReference1.Invoice[] getInvoice(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInvoice", ReplyAction="http://tempuri.org/IService1/getInvoiceResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Invoice[]> getInvoiceAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInvoiceByID", ReplyAction="http://tempuri.org/IService1/getInvoiceByIDResponse")]
        Farmers_Field_UI.ServiceReference1.Invoice getInvoiceByID(int invoiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInvoiceByID", ReplyAction="http://tempuri.org/IService1/getInvoiceByIDResponse")]
        System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Invoice> getInvoiceByIDAsync(int invoiceID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Farmers_Field_UI.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Farmers_Field_UI.ServiceReference1.IService1>, Farmers_Field_UI.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool login(string Email, string Password) {
            return base.Channel.login(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string Email, string Password) {
            return base.Channel.loginAsync(Email, Password);
        }
        
        public int register(Farmers_Field_UI.ServiceReference1.User FFieldUser) {
            return base.Channel.register(FFieldUser);
        }
        
        public System.Threading.Tasks.Task<int> registerAsync(Farmers_Field_UI.ServiceReference1.User FFieldUser) {
            return base.Channel.registerAsync(FFieldUser);
        }
        
        public bool registered(string Email, string Password) {
            return base.Channel.registered(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> registeredAsync(string Email, string Password) {
            return base.Channel.registeredAsync(Email, Password);
        }
        
        public bool isNewProduct(string ID) {
            return base.Channel.isNewProduct(ID);
        }
        
        public System.Threading.Tasks.Task<bool> isNewProductAsync(string ID) {
            return base.Channel.isNewProductAsync(ID);
        }
        
        public bool addNewProduct(string category, string name, string description, double price, double discount, string supplier) {
            return base.Channel.addNewProduct(category, name, description, price, discount, supplier);
        }
        
        public System.Threading.Tasks.Task<bool> addNewProductAsync(string category, string name, string description, double price, double discount, string supplier) {
            return base.Channel.addNewProductAsync(category, name, description, price, discount, supplier);
        }
        
        public bool AddProduct(Farmers_Field_UI.ServiceReference1.Product Prod) {
            return base.Channel.AddProduct(Prod);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(Farmers_Field_UI.ServiceReference1.Product Prod) {
            return base.Channel.AddProductAsync(Prod);
        }
        
        public bool editProduct(Farmers_Field_UI.ServiceReference1.Product Aug, int ID) {
            return base.Channel.editProduct(Aug, ID);
        }
        
        public System.Threading.Tasks.Task<bool> editProductAsync(Farmers_Field_UI.ServiceReference1.Product Aug, int ID) {
            return base.Channel.editProductAsync(Aug, ID);
        }
        
        public bool removeProduct(int ID) {
            return base.Channel.removeProduct(ID);
        }
        
        public System.Threading.Tasks.Task<bool> removeProductAsync(int ID) {
            return base.Channel.removeProductAsync(ID);
        }
        
        public Farmers_Field_UI.ServiceReference1.Product[] getAllProducts() {
            return base.Channel.getAllProducts();
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product[]> getAllProductsAsync() {
            return base.Channel.getAllProductsAsync();
        }
        
        public Farmers_Field_UI.ServiceReference1.Product[] getAllProdcutsByType(string type) {
            return base.Channel.getAllProdcutsByType(type);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product[]> getAllProdcutsByTypeAsync(string type) {
            return base.Channel.getAllProdcutsByTypeAsync(type);
        }
        
        public Farmers_Field_UI.ServiceReference1.Product getProductByID(int id) {
            return base.Channel.getProductByID(id);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product> getProductByIDAsync(int id) {
            return base.Channel.getProductByIDAsync(id);
        }
        
        public string getUserType(string user_name) {
            return base.Channel.getUserType(user_name);
        }
        
        public System.Threading.Tasks.Task<string> getUserTypeAsync(string user_name) {
            return base.Channel.getUserTypeAsync(user_name);
        }
        
        public int FindProductBeingSearched_ID(string ID) {
            return base.Channel.FindProductBeingSearched_ID(ID);
        }
        
        public System.Threading.Tasks.Task<int> FindProductBeingSearched_IDAsync(string ID) {
            return base.Channel.FindProductBeingSearched_IDAsync(ID);
        }
        
        public Farmers_Field_UI.ServiceReference1.Product getProduct(string ID) {
            return base.Channel.getProduct(ID);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Product> getProductAsync(string ID) {
            return base.Channel.getProductAsync(ID);
        }
        
        public Farmers_Field_UI.ServiceReference1.User GetUser(string username) {
            return base.Channel.GetUser(username);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.User> GetUserAsync(string username) {
            return base.Channel.GetUserAsync(username);
        }
        
        public Farmers_Field_UI.ServiceReference1.User getUserByID(string id) {
            return base.Channel.getUserByID(id);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.User> getUserByIDAsync(string id) {
            return base.Channel.getUserByIDAsync(id);
        }
        
        public bool userExists(string id) {
            return base.Channel.userExists(id);
        }
        
        public System.Threading.Tasks.Task<bool> userExistsAsync(string id) {
            return base.Channel.userExistsAsync(id);
        }
        
        public Farmers_Field_UI.ServiceReference1.Cart[] getCartItems(string user_id) {
            return base.Channel.getCartItems(user_id);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Cart[]> getCartItemsAsync(string user_id) {
            return base.Channel.getCartItemsAsync(user_id);
        }
        
        public int addToCart(int product_ID, string user_ID) {
            return base.Channel.addToCart(product_ID, user_ID);
        }
        
        public System.Threading.Tasks.Task<int> addToCartAsync(int product_ID, string user_ID) {
            return base.Channel.addToCartAsync(product_ID, user_ID);
        }
        
        public bool alreadyInCart(int product_ID, string user_ID) {
            return base.Channel.alreadyInCart(product_ID, user_ID);
        }
        
        public System.Threading.Tasks.Task<bool> alreadyInCartAsync(int product_ID, string user_ID) {
            return base.Channel.alreadyInCartAsync(product_ID, user_ID);
        }
        
        public bool removeUserCart(string user_id) {
            return base.Channel.removeUserCart(user_id);
        }
        
        public System.Threading.Tasks.Task<bool> removeUserCartAsync(string user_id) {
            return base.Channel.removeUserCartAsync(user_id);
        }
        
        public int removeFromCart(int product_ID, string user_ID) {
            return base.Channel.removeFromCart(product_ID, user_ID);
        }
        
        public System.Threading.Tasks.Task<int> removeFromCartAsync(int product_ID, string user_ID) {
            return base.Channel.removeFromCartAsync(product_ID, user_ID);
        }
        
        public int GetNumCartItems(string user_id) {
            return base.Channel.GetNumCartItems(user_id);
        }
        
        public System.Threading.Tasks.Task<int> GetNumCartItemsAsync(string user_id) {
            return base.Channel.GetNumCartItemsAsync(user_id);
        }
        
        public Farmers_Field_UI.ServiceReference1.Wishlist[] getWishlist(string user_id) {
            return base.Channel.getWishlist(user_id);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Wishlist[]> getWishlistAsync(string user_id) {
            return base.Channel.getWishlistAsync(user_id);
        }
        
        public int addToWishList(int product_ID, string user_ID) {
            return base.Channel.addToWishList(product_ID, user_ID);
        }
        
        public System.Threading.Tasks.Task<int> addToWishListAsync(int product_ID, string user_ID) {
            return base.Channel.addToWishListAsync(product_ID, user_ID);
        }
        
        public bool alreadyInWishlist(int product_ID, string user_ID) {
            return base.Channel.alreadyInWishlist(product_ID, user_ID);
        }
        
        public System.Threading.Tasks.Task<bool> alreadyInWishlistAsync(int product_ID, string user_ID) {
            return base.Channel.alreadyInWishlistAsync(product_ID, user_ID);
        }
        
        public int RemoveFromWishList(int product_ID, string user_ID) {
            return base.Channel.RemoveFromWishList(product_ID, user_ID);
        }
        
        public System.Threading.Tasks.Task<int> RemoveFromWishListAsync(int product_ID, string user_ID) {
            return base.Channel.RemoveFromWishListAsync(product_ID, user_ID);
        }
        
        public int GenInvoice(int cartID, string dateTime, double total) {
            return base.Channel.GenInvoice(cartID, dateTime, total);
        }
        
        public System.Threading.Tasks.Task<int> GenInvoiceAsync(int cartID, string dateTime, double total) {
            return base.Channel.GenInvoiceAsync(cartID, dateTime, total);
        }
        
        public int GetCart(int cart_ID) {
            return base.Channel.GetCart(cart_ID);
        }
        
        public System.Threading.Tasks.Task<int> GetCartAsync(int cart_ID) {
            return base.Channel.GetCartAsync(cart_ID);
        }
        
        public Farmers_Field_UI.ServiceReference1.Invoice[] getInvoice(string userID) {
            return base.Channel.getInvoice(userID);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Invoice[]> getInvoiceAsync(string userID) {
            return base.Channel.getInvoiceAsync(userID);
        }
        
        public Farmers_Field_UI.ServiceReference1.Invoice getInvoiceByID(int invoiceID) {
            return base.Channel.getInvoiceByID(invoiceID);
        }
        
        public System.Threading.Tasks.Task<Farmers_Field_UI.ServiceReference1.Invoice> getInvoiceByIDAsync(int invoiceID) {
            return base.Channel.getInvoiceByIDAsync(invoiceID);
        }
    }
}
